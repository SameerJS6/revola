{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "onboarding",
  "type": "registry:ui",
  "title": "Onboarding Dialog",
  "description": "A responsive multi-step onboarding dialog with progress indicators - drawer on mobile, modal on desktop.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "https://revola.sameerjs.com/r/revola.json"
  ],
  "files": [
    {
      "path": "registry/revola/examples/origin-ui/onboarding/onboarding.tsx",
      "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nimport { ArrowRightIcon } from \"lucide-react\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  ResponsiveDialog,\r\n  ResponsiveDialogClose,\r\n  ResponsiveDialogContent,\r\n  ResponsiveDialogDescription,\r\n  ResponsiveDialogFooter,\r\n  ResponsiveDialogHeader,\r\n  ResponsiveDialogTitle,\r\n  ResponsiveDialogTrigger,\r\n} from \"@/components/ui/revola\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport default function OnboardingDialog() {\r\n  const [step, setStep] = useState(1);\r\n\r\n  const stepContent = [\r\n    {\r\n      title: \"Welcome to Revola\",\r\n      description:\r\n        \"A modern React component library built with Radix UI and Tailwind CSS, designed for building beautiful and accessible user interfaces.\",\r\n    },\r\n    {\r\n      title: \"Built for Developers\",\r\n      description:\r\n        \"Revola provides a comprehensive set of pre-built components that are fully accessible, customizable, and ready for production use.\",\r\n    },\r\n    {\r\n      title: \"Modern & Accessible\",\r\n      description:\r\n        \"Every component follows modern web standards with built-in accessibility features, keyboard navigation, and screen reader support.\",\r\n    },\r\n    {\r\n      title: \"Start Building Today\",\r\n      description:\r\n        \"Jumpstart your next project with Revola's component library. Check out our documentation and examples to get started quickly.\",\r\n    },\r\n  ];\r\n\r\n  const totalSteps = stepContent.length;\r\n\r\n  const handleContinue = () => {\r\n    if (step < totalSteps) {\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ResponsiveDialog\r\n      onOpenChange={(open) => {\r\n        if (open) setStep(1);\r\n      }}\r\n    >\r\n      <ResponsiveDialogTrigger asChild>\r\n        <Button variant=\"outline\" className=\"h-12 rounded-full px-6 capitalize\">\r\n          Onboarding\r\n        </Button>\r\n      </ResponsiveDialogTrigger>\r\n      <ResponsiveDialogContent className=\"gap-0 sm:max-w-[400px] [&>button:last-child]:text-white\">\r\n        <div className=\"p-2\">\r\n          <Image\r\n            width={382}\r\n            height={216}\r\n            alt=\"dialog\"\r\n            src=\"/extended-gradient.png\"\r\n            className=\"w-full rounded-md object-cover\"\r\n          />\r\n        </div>\r\n        <div className=\"space-y-6 px-6 pb-6 pt-3\">\r\n          <ResponsiveDialogHeader className=\"p-0\">\r\n            <ResponsiveDialogTitle>{stepContent[step - 1].title}</ResponsiveDialogTitle>\r\n            <ResponsiveDialogDescription>{stepContent[step - 1].description}</ResponsiveDialogDescription>\r\n          </ResponsiveDialogHeader>\r\n          <div className=\"flex flex-col justify-between gap-4 sm:flex-row sm:items-center\">\r\n            <div className=\"flex justify-center space-x-1.5 max-sm:order-1\">\r\n              {[...Array(totalSteps)].map((_, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={cn(\"size-1.5 rounded-full\", index + 1 === step ? \"bg-primary\" : \"bg-primary/20\")}\r\n                />\r\n              ))}\r\n            </div>\r\n            <ResponsiveDialogFooter className=\"flex-col-reverse gap-2 p-0\">\r\n              <ResponsiveDialogClose asChild>\r\n                <Button type=\"button\" variant=\"ghost\">\r\n                  Skip\r\n                </Button>\r\n              </ResponsiveDialogClose>\r\n\r\n              {step < totalSteps ? (\r\n                <Button className=\"group\" type=\"button\" onClick={handleContinue}>\r\n                  Next\r\n                  <ArrowRightIcon\r\n                    className=\"-me-1 opacity-60 transition-transform group-hover:translate-x-0.5\"\r\n                    size={16}\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </Button>\r\n              ) : (\r\n                <ResponsiveDialogClose asChild>\r\n                  <Button type=\"button\">Okay</Button>\r\n                </ResponsiveDialogClose>\r\n              )}\r\n            </ResponsiveDialogFooter>\r\n          </div>\r\n        </div>\r\n      </ResponsiveDialogContent>\r\n    </ResponsiveDialog>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}