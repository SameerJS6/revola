{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkout",
  "type": "registry:ui",
  "title": "Checkout Dialog",
  "description": "A responsive checkout form dialog with payment inputs and plan selection - drawer on mobile, modal on desktop.",
  "dependencies": [
    "lucide-react",
    "react-payment-inputs"
  ],
  "registryDependencies": [
    "badge",
    "button",
    "input",
    "label",
    "radio-group",
    "https://revola.sameerjs.com/r/revola.json"
  ],
  "files": [
    {
      "path": "registry/revola/examples/origin-ui/forms/payment/checkout.tsx",
      "content": "\"use client\";\r\n\r\nimport { useEffect, useId, useRef, useState } from \"react\";\r\nimport { usePaymentInputs } from \"react-payment-inputs\";\r\nimport images, { type CardImages } from \"react-payment-inputs/images\";\r\n\r\nimport { CreditCardIcon, StoreIcon } from \"lucide-react\";\r\n\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport {\r\n  ResponsiveDialog,\r\n  ResponsiveDialogContent,\r\n  ResponsiveDialogDescription,\r\n  ResponsiveDialogHeader,\r\n  ResponsiveDialogTitle,\r\n  ResponsiveDialogTrigger,\r\n} from \"@/components/ui/revola\";\r\n\r\nexport default function CheckoutDialog() {\r\n  const id = useId();\r\n  const { meta, getCardNumberProps, getExpiryDateProps, getCVCProps, getCardImageProps } = usePaymentInputs();\r\n  const couponInputRef = useRef<HTMLInputElement>(null);\r\n  const [showCouponInput, setShowCouponInput] = useState(false);\r\n  const [couponCode, setCouponCode] = useState(\"\");\r\n\r\n  // Auto-focus the coupon input when it's shown\r\n  useEffect(() => {\r\n    if (showCouponInput && couponInputRef.current) {\r\n      couponInputRef.current.focus();\r\n    }\r\n  }, [showCouponInput]);\r\n\r\n  return (\r\n    <ResponsiveDialog>\r\n      <ResponsiveDialogTrigger asChild>\r\n        <Button variant=\"outline\" className=\"h-12 rounded-full px-6 capitalize\">\r\n          Checkout\r\n        </Button>\r\n      </ResponsiveDialogTrigger>\r\n      <ResponsiveDialogContent className=\"sm:max-w-[400px]\">\r\n        <div className=\"space-y-4 overflow-y-auto p-6 max-sm:pt-4\">\r\n          <div className=\"mb-2 flex flex-col gap-2\">\r\n            <div className=\"flex size-11 shrink-0 items-center justify-center rounded-full border\" aria-hidden=\"true\">\r\n              <StoreIcon className=\"opacity-80\" size={16} />\r\n            </div>\r\n            <ResponsiveDialogHeader className=\"p-0\">\r\n              <ResponsiveDialogTitle className=\"text-left\">Confirm and pay</ResponsiveDialogTitle>\r\n              <ResponsiveDialogDescription className=\"text-left\">\r\n                Pay securely and cancel any time.\r\n              </ResponsiveDialogDescription>\r\n            </ResponsiveDialogHeader>\r\n          </div>\r\n\r\n          <form className=\"space-y-5\">\r\n            <div className=\"space-y-4\">\r\n              <RadioGroup className=\"grid-cols-2\" defaultValue=\"yearly\">\r\n                {/* Monthly */}\r\n                <label className=\"shadow-xs relative flex cursor-pointer flex-col gap-1 rounded-md border border-input px-4 py-3 outline-none transition-[color,box-shadow] has-[:focus-visible]:border-ring has-[[data-state=checked]]:border-primary/50 has-[:focus-visible]:ring-[3px] has-[:focus-visible]:ring-ring/50\">\r\n                  <RadioGroupItem id=\"radio-monthly\" value=\"monthly\" className=\"sr-only after:absolute after:inset-0\" />\r\n                  <p className=\"text-sm font-medium text-foreground\">Monthly</p>\r\n                  <p className=\"text-sm text-muted-foreground\">$32/month</p>\r\n                </label>\r\n                {/* Yearly */}\r\n                <label className=\"shadow-xs relative flex cursor-pointer flex-col gap-1 rounded-md border border-input px-4 py-3 outline-none transition-[color,box-shadow] has-[:focus-visible]:border-ring has-[[data-state=checked]]:border-primary/50 has-[:focus-visible]:ring-[3px] has-[:focus-visible]:ring-ring/50\">\r\n                  <RadioGroupItem id=\"radio-yearly\" value=\"yearly\" className=\"sr-only after:absolute after:inset-0\" />\r\n                  <div className=\"inline-flex items-start justify-between gap-2\">\r\n                    <p className=\"text-sm font-medium text-foreground\">Yearly</p>\r\n                    <Badge>Popular</Badge>\r\n                  </div>\r\n                  <p className=\"text-sm text-muted-foreground\">$320/year</p>\r\n                </label>\r\n              </RadioGroup>\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor={`name-${id}`}>Name on card</Label>\r\n                <Input id={`name-${id}`} type=\"text\" required placeholder=\"John Doe\" />\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <legend className=\"text-sm font-medium text-foreground\">Card Details</legend>\r\n                <div className=\"shadow-xs rounded-md\">\r\n                  <div className=\"relative focus-within:z-10\">\r\n                    <Input\r\n                      className=\"peer rounded-b-none pe-9 shadow-none [direction:inherit]\"\r\n                      {...getCardNumberProps()}\r\n                      placeholder=\"4242 4242 4242 4242\"\r\n                    />\r\n                    <div className=\"pointer-events-none absolute inset-y-0 end-0 flex items-center justify-center pe-3 text-muted-foreground/80 peer-disabled:opacity-50\">\r\n                      {meta.cardType ? (\r\n                        <svg\r\n                          className=\"overflow-hidden rounded-sm\"\r\n                          // Todo: remove this type case at build time in rehype-component.ts\r\n                          {...getCardImageProps({\r\n                            images: images as unknown as CardImages,\r\n                          })}\r\n                          width={20}\r\n                        />\r\n                      ) : (\r\n                        <CreditCardIcon size={16} aria-hidden=\"true\" />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"-mt-px flex\">\r\n                    <div className=\"min-w-0 flex-1 focus-within:z-10\">\r\n                      <Input\r\n                        className=\"rounded-e-none rounded-t-none shadow-none [direction:inherit]\"\r\n                        {...getExpiryDateProps()}\r\n                        placeholder=\"06/28\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"-ms-px min-w-0 flex-1 focus-within:z-10\">\r\n                      <Input\r\n                        className=\"rounded-s-none rounded-t-none shadow-none [direction:inherit]\"\r\n                        {...getCVCProps()}\r\n                        placeholder=\"123\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {!showCouponInput ? (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowCouponInput(true)}\r\n                  className=\"text-sm underline hover:no-underline\"\r\n                >\r\n                  + Add coupon\r\n                </button>\r\n              ) : (\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor={`coupon-${id}`}>Coupon code</Label>\r\n                  <Input\r\n                    id={`coupon-${id}`}\r\n                    ref={couponInputRef}\r\n                    placeholder=\"MONSOON25\"\r\n                    value={couponCode}\r\n                    onChange={(e) => setCouponCode(e.target.value)}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <Button type=\"button\" className=\"w-full\">\r\n              Subscribe\r\n            </Button>\r\n          </form>\r\n          <p className=\"text-center text-xs text-muted-foreground\">Payments are non-refundable. Cancel anytime.</p>\r\n        </div>\r\n      </ResponsiveDialogContent>\r\n    </ResponsiveDialog>\r\n  );\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}